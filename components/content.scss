// Content is a generic type that serves as the basis for any component that displays some content in one way or the other
// It requires something like this though there are many variations possible
// <div class='is-content'>some text</div>
// <div class='is-content'><span class="is-icon"></span></div>
// <div class='is-content'><span class="is-text"></span></div>
// <div class='is-content'><span class="is-icon"></span><span class="is-text"></span></div>
// Note that we assume the icon is on the _left_ side of the text if both are present though we try to hard to not be aware of this fact

// @component content component


// ----------------------------------------- GROW
@mixin content-grow-fill {
	flex-grow: 1;
}

// ----------------------------------------- ALIGN SELF
@mixin template-content-align-self {
	align-self: auto;
}
@mixin content-align-self-start {
	align-self: flex-start;
}
@mixin content-align-self-end {
	align-self: flex-end;
}
@mixin content-align-self-center {
	align-self: center;
}
@mixin content-align-self-baseline {
	align-self: baseline;
}
@mixin content-align-self-stretch {
	align-self: stretch;
}

// ----------------------------------------- ORDER

// reverse the order to have the icon after the label
// there is no template because the idea is not that you make your own order at this point
// you can however toggle it as a dimensional option
@mixin content-order-reverse {
	flex-direction: row-reverse;
	align-items: center;
}
@mixin content-order-normal {
	flex-direction: row;
	align-items: center;
}

// some tiny corrections
@mixin content-fix-icon {
	> .is-icon {
		// make sure it fills the max space and no bigger
		max-height: 100%;
		line-height: 100%;
		// otherwise images etc do not register correctly width-wise
		min-width: 1rem;
	}
	> .is-text {
		flex-grow: 1;
		white-space: nowrap;
	}
}

@mixin content-variant-default {
	@include content-fix-icon;
	@include content-font-normal;
	@include content-order-normal;
	@include content-size-medium;
	@include content-border-none;
	@include content-color-transparent;
}
@mixin content-variant-neutral {
	@include content-variant-default;
}
@mixin content-variant-primary {
	@include content-color-primary;
}
@mixin content-variant-secondary {
	@include content-color-secondary;
}
@mixin content-variant-primary-outline {
	@include content-color-primary-outline;
}
@mixin content-variant-secondary-outline {
	@include content-color-secondary-outline;
}
@mixin content-variant-ghost {
	@include content-border-none;
	@include content-color-transparent;
}
@mixin content-variant-ghost-light {
	@include content-border-none;
	@include content-color-transparent-light;
}
@mixin content-variant-info {
	@include content-color-info;
}
@mixin content-variant-info-outline {
	@include content-color-info-outline;
}
@mixin content-variant-warning {
	@include content-color-warning;
}
@mixin content-variant-warning-outline {
	@include content-color-warning-outline;
}
@mixin content-variant-danger {
	@include content-color-danger;
}
@mixin content-variant-danger-outline {
	@include content-color-danger-outline;
}
@mixin content-variant-success {
	@include content-color-success;
}
@mixin content-variant-success-outline {
	@include content-color-success-outline;
}

// @extension padded-content content
// ----------------------------------------- SIZES -> include spacing
@mixin template-padded-content_size {
	padding: 0;
}
// no padding etc
@mixin padded-content_size_plain {
	padding: 0;
}
@mixin padded-content_size_xsmall {
	@include content_spacing_xsmall;
}
@mixin padded-content-size-small {
	@include content-spacing-small;
}
@mixin padded-content-size-medium {
	@include content-spacing-medium;
}
@mixin padded-content-size-large {
	@include content-spacing-large;
}
@mixin padded-content-size-xlarge {
	@include content-spacing-xlarge;
}