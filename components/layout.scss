// A layout is any element that you can use to position content
// @component layout component

// ----------------------------------------- PATTERN
@mixin layout_pattern_basic-alternating {
	> :nth-child(even) {
		background-color: $color-body;
	}
	> :nth-child(odd) {
		background-color: $color-background;
	}
	> .is-selected {
		background-color: $color-primary-lightest;
	}
}

// ----------------------------------------- WIDTH of the layout itself
@mixin template_layout_width {
	width: unset;
	margin-left: auto;
	margin-right: auto;
}
@mixin layout_width_small {
	width: calc(#{$font-size-medium} * 64);
	margin-left: auto;
	margin-right: auto;
}
@mixin layout_width_medium {
	width: calc(#{$font-size-medium} * 96);
	margin-left: auto;
	margin-right: auto;
}
@mixin layout_width_large {
	width: calc(#{$font-size-medium} * 128);
	margin-left: auto;
	margin-right: auto;
}

// ----------------------------------------- CONTENT-WIDTH
@mixin template_layout_content-width {
	width: unset;
	margin-left: auto;
	margin-right: auto;
}
@mixin layout_content-width_small {
	padding-left: calc(50% - (#{$font-size-medium} * 32));
	padding-right: calc(50% - (#{$font-size-medium} * 32));
	margin-left: auto;
	margin-right: auto;
}
@mixin layout_content-width_medium {
	padding-left: calc(50% - (#{$font-size-medium} * 48));
	padding-right: calc(50% - (#{$font-size-medium} * 48));
	margin-left: auto;
	margin-right: auto;
}
@mixin layout_content-width_large {
	padding-left: calc(50% - (#{$font-size-medium} * 64));
	padding-right: calc(50% - (#{$font-size-medium} * 64));
	margin-left: auto;
	margin-right: auto;
}

// ----------------------------------------- WRAPPING
@mixin template_layout_wrap {
	flex-wrap: nowrap;
}
@mixin layout_wrap_none {
	flex-wrap: nowrap;
}
@mixin layout_wrap_wrap {
	flex-wrap: wrap;
}
@mixin layout_wrap_reverse {
	flex-wrap: wrap-reverse;
}

// ----------------------------------------- ALIGN
@mixin layout_align_main-start {
	justify-content: flex-start;
}
@mixin layout_align_main-center {
	justify-content: center;
}
@mixin layout_align_main-end {
	justify-content: flex-end;
}
@mixin layout_align_main-stretch {
	justify-content: stretch;
}
@mixin layout_align_main-baseline {
	justify-content: baseline;
}
@mixin layout_align_cross-start {
	align-items: flex-start;
}
@mixin layout_align_cross-center {
	align-items: center;
}
@mixin layout_align_cross-end {
	align-items: flex-end;
}
@mixin layout_align_cross-stretch {
	align-items: stretch;
}
@mixin layout_align_cross-baseline {
	align-items: baseline;
}
@mixin layout_align_space-between {
	justify-content: space-between;
}
@mixin layout_align_space-around {
	justify-content: space-around;
}
@mixin layout_align_space-evenly {
	justify-content: space-evenly;
}
@mixin layout_align_start {
	@include layout_align_main-start;
	@include layout_align_cross-start;
}
@mixin layout_align_center {
	@include layout_align_main-center;
	@include layout_align_cross-center;
}
@mixin layout_align_end {
	@include layout_align_main-end;
	@include layout_align_cross-end;
}
@mixin layout_align_stretch {
	@include layout_align_main-stretch;
	@include layout_align_cross-stretch;
}
@mixin layout_align_baseline {
	@include layout_align_main-baseline;
	@include layout_align_cross-baseline;
}


// ----------------------------------------- VARIANTS
// a card approach where each cell is a card, this is often used in dashboards
// sometimes you have a root grid (e.g. root page), but in one particular cell you want to route another grid (another page)
// you don't want to have the margin applied at both levels, the root row should be a plain one then, the embedded can be a card container
// at the page/grid level you probably want to configure a "default" variant for each row which is applied unless a specific variant is indicated for a given row
// it should be possible to send along a particular default variant to a page when rendering it, in most cases the included page should itself be a card container (because it is likely just an embedded page for reuse)
// in some cases however, you might want to render a page within the content of a cell (or e.g. a table with detail view) and at that point you don't want the card container styling
@mixin layout_variant_cards {
	@include component_spacing_medium;
}

@mixin layout_variant_card {
	@include component_border_shadow;
	@include component_spacing_large;
	@include component_color_background;
}
